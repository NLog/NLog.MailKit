name: '$(Rev:r)' # Build.BuildId
trigger:
- master
pool:
  name: Azure Pipelines
  vmImage: 'windows-2019'
  demands:
  - msbuild
  - visualstudio
  - vstest

variables:
  Solution: 'src/NLog.MailKit.sln'
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'Release'
  Version: '3.3.0'
  FullVersion: '$(Version).$(Build.BuildId)'

steps:
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 5.x'
  inputs:
    versionSpec: 5.x

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '$(Solution)'
    verbosityRestore: Minimal

- task: SonarCloudPrepare@1
  displayName: 'Prepare SonarCloud analysis'
  inputs:
    SonarCloud: 'Sonarcloud'
    organization: nlog
    projectKey: nlog.mailkit
    projectName: 'NLog Mailkit'
    projectVersion: '$(FullVersion)'

- task: VSBuild@1
  displayName: 'Build'
  inputs:
    solution: '$(Solution)'
    msbuildArgs: '-v:m -p:version=$(Version) -p:fileVersion=$(FullVersion)'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    maximumCpuCount: true
    logProjectEvents: false

- task: VSTest@2
  displayName: 'Run Tests'
  inputs:
    testAssemblyVer2: |
     **\*.tests.dll
     !**\obj\**
    codeCoverageEnabled: true
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    rerunFailedTests: true

- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud Analysis'

- task: SonarCloudPublish@1
  displayName: 'Publish SonarCloud Quality Gate'

- task: CopyFiles@2
  displayName: 'Copy Files artifacts'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: |
     **\bin\$(BuildConfiguration)\**\*.nupkg 
     **\bin\$(BuildConfiguration)\**\*.snupkg 
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: packages'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: packages
  condition: succeededOrFailed()

- task: NuGetCommand@2
  displayName: 'Push NuGet Package to nuget.org'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;$(Build.ArtifactStagingDirectory)/**/*.snupkg;'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NLog new'
    verbosityPush: 'Normal'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  continueOnError: true

- task: NuGetCommand@2
  displayName: 'Push NuGet Package to Azure Devops'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;$(Build.ArtifactStagingDirectory)/**/*.snupkg;'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'a6abb58f-ecac-4f57-8990-021064cff0ff/d910ba3f-9900-4b9a-a317-016618781395' # NLog
    allowPackageConflicts: true
    verbosityPush: 'Normal'
  enabled: false # Get error TF400898  
